
Overall Score:
	I aimed for G with 7 points
	

02. Health Packs: [Points: 1]
	Health prefab:
		Created a health pack prefab
		
	Health component:
		Added a Heal method
		
	HealthPack component:
		Created a health pack component that heals the
		player when the player enters the trigger
		
		
03. Sprite Renderer: [Points: 1]
	WaterFoam child game object:
		Added a water foam sprite game object to player prefab
	
	PlayerController component:
		Added a isMoving network variable and changed the read
		and write permissions of it. I also added a foam renderer
		variable
		
		Created a OnMovementChanged method that toggles the foam
		sprite renderer, when the isMoving variable changes
		Couldn't find the right sprite so used the empty water 
		foam one instead rather than changing the player's renderer
		
		I also fixed so that inputs are ignored if the controller
		component is disabled
		

04. Limited Ammo: [Points: 1]
	FiringAction component:
		Added a max ammo count variable and an ammo count 
		network variable. Set so only server can modify it
		
		Then in Fire method I check ammo count and inside
		ShootBulletServerRpc I subtract ammo count
	

05. Shot Timer: [Points: 1]
	FiringAction component:
		Added a refire delay variable and a fire delay 
		network variable. Set so only server can modify it

		Updated Fire method to take this into account
		and ShootBulletServerRpc, which sets the new fire delay
		
		Used NetworkManager time so that its the same across
		both server and client
		

09. Player Death: [Points: 1]
    Health component:
		Exposed a max health variable 
		
		Added a OnDeath and OnRespawn events, which toggles 
		scripts on the player, rather than destroying and 
		instantiating (which is done on both host and client)
		
		Fixed so that OnHealthChanged method is called when current
		health is changed, which call the on death and on respawn
		events based on circumstance

	ServerSingleBullet prefab:
		PS. Increased damage for quicker testing
		

11. Limited Respawn: [Points: 2]
	Health component:
		Added a Respawn method that refills player health,
		which is only done on the host/server side
	
	PlayerRespawn component: 
		Created a player respawn component that handles
		respawn delay, count and random respawn position
		
		Subscribes to CurrentHealth.OnValueChanged and checks
		the current health and starts respawning if dead and
		has spawns left (only on host/server side)
		
	FireAction component:
		Changed so player can't fire when component is disabled
	
	PlayerController component:
		Fixed so OnFire doesn't throw errors if it has no
		events to invoke